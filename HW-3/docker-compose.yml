version: '3'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes: 
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
 
  wordpress:
    depends_on: 
      - db
    image: wordpress:6.2.2-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    hostname: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network


  prometheus-1:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus1_data:/prometheus
    container_name: prometheus-1
    hostname: prometheus-1
    command:
      - --config.file=/etc/prometheus/prometheus1.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - app-network


  prometheus-2:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus2_data:/prometheus
    container_name: prometheus-2
    hostname: prometheus-2
    command:
      - --config.file=/etc/prometheus/prometheus2.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
    ports:
      - 9091:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - app-network


  thanos-sidecar-1:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: sidecar-1
    hostname: sidecar-1
    volumes:
        - ./thanos/:/etc/thanos/
        - prometheus1_data:/prometheus
    command:
        - 'sidecar'
        - '--tsdb.path=/prometheus'
        - '--prometheus.url=http://prometheus-1:9090'
        # - '--reloader.config-file /etc/prometheus/prometheus1.yml'
        - '--grpc-address=0.0.0.0:10091'
        - '--http-address=0.0.0.0:10902'
    depends_on:
        - prometheus-1
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - app-network

  thanos-sidecar-2:
    image: quay.io/thanos/thanos:v0.31.0
    container_name: sidecar-2
    hostname: sidecar-2
    volumes:
        - ./thanos/:/etc/thanos/
        - prometheus2_data:/prometheus
    command:
        - 'sidecar'
        - '--tsdb.path=/prometheus'
        - '--prometheus.url=http://prometheus-2:9090'
        # - '--reloader.config-file /etc/prometheus/prometheus2.yml'
        - '--grpc-address=0.0.0.0:10091'
        - '--http-address=0.0.0.0:10902'
    depends_on:
        - prometheus-2
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - app-network


  thanos-querier:
          image: quay.io/thanos/thanos:v0.31.0
          container_name: thanos-querier
          hostname: thanos-querier
          command:
              - 'query'
              - '--grpc-address=0.0.0.0:10091'
              - '--http-address=0.0.0.0:10902'
              - '--query.replica-label=replica'
              - '--store=thanos-sidecar-1:10091'
              - '--store=thanos-sidecar-2:10091'
          ports:
              - 10902:10902
          depends_on:
              - thanos-sidecar-1
              - thanos-sidecar-2
          restart: unless-stopped
          environment:
            TZ: "Europe/Moscow"
          networks:
            - app-network


  thanos-query-frontend:
      image: quay.io/thanos/thanos:v0.31.0
      container_name: thanos-query-frontend
      hostname: thanos-query-frontend
      command:
          - 'query-frontend'
          - '--http-address=0.0.0.0:10901'
          - '--query-frontend.downstream-url=http://thanos-querier:10902'
      ports:
          - 10901:10901
      depends_on:
          - thanos-querier
      restart: unless-stopped
      environment:
        TZ: "Europe/Moscow"
      networks:
        - app-network





  grafana:
    hostname: grafana
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    networks:
      - app-network
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
     #- GF_SERVER_ROOT_URL=http://my.grafana.server/
     - GF_INSTALL_PLUGINS=grafana-clock-panel

  alertmanager:
    image: prom/alertmanager:latest
    user: root
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    container_name: alertmanager
    hostname: alertmanager
    environment:
      TZ: "Europe/Moscow"
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertman-config.yml'
      - '--storage.path=/etc/alertmanager/data'
    networks:
      - app-network



### Exporters

  prom-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    hostname: nginx-exporter
    restart: unless-stopped
    ports:
      - 9113:9113
    command:
      - -nginx.scrape-uri=http://webserver/basic_status
      - -nginx.ssl-verify=false
    networks:
      - app-network

  prom-os-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: node-exporter
    hostname: node-exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - app-network

  wordpress-exporter:
    container_name: wordpress-exporter
    hostname: wordpress-exporter
    image: ghcr.io/aorfanos/wordpress-exporter/wordpress-exporter:v0.0.8
    depends_on:
      - wordpress
    command:
      - -host=http://webserver:80/index.php
      - -auth.basic=false
    ports:
      - 9112:11011
    networks:
      - app-network

  blackbox-exporter:
    container_name: blackbox-exporter
    hostname: blackbox-exporter
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    volumes:
      - ./blackbox/config.yml:/config.yml:ro
    ports:
      - "9115:9155"
    networks:
      - app-network

  php-fpm-exporter:
    container_name: fpm-exporter
    hostname: fpm-exporter
    image: hipages/php-fpm_exporter:latest
    ports:
      - "9253:9253"
    environment:
      PHP_FPM_SCRAPE_URI: "tcp://phpfpm:9000/status"
      PHP_FPM_LOG_LEVEL: "debug"
    depends_on:
      - wordpress
    networks:
      - app-network


 



volumes:
  certbot-etc:
  wordpress:
  dbdata:
  grafana_data:
  alermanager_data:
  prometheus1_data:
  prometheus2_data:

networks:
  app-network:
    driver: bridge     

secrets:
  bot_id:
    file: bot_tg_id.txt
  my_tg_id:
    file: my_tg_id.txt